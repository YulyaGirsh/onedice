import asyncio
import os
import subprocess
from datetime import datetime
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

def auto_push_to_github():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub"""
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        subprocess.run(['git', 'add', '.'], check=True, capture_output=True)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        # –î–µ–ª–∞–µ–º –∫–æ–º–º–∏—Ç
        subprocess.run(['git', 'commit', '-m', f'Auto-commit: {timestamp}'], 
                      check=True, capture_output=True)
        
        # –ü—É—à–∏–º –Ω–∞ GitHub
        subprocess.run(['git', 'push', 'origin', 'main'], 
                      check=True, capture_output=True)
        
        print(f"‚úÖ Auto-push successful: {timestamp}")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Auto-push failed: {e}")
    except Exception as e:
        print(f"‚ùå Unexpected error during auto-push: {e}")

@dp.message(Command("start"))
async def start_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = message.from_user.first_name or "–ò–≥—Ä–æ–∫"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = f"""üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OneDice, {username}!

üéÆ –≠—Ç–æ –∏–≥—Ä–∞ –≤ –∫—É–±–∏–∫–∏ –Ω–∞ TON —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∏ –æ—Ñ—Ñ–µ—Ä–∞–º–∏.

üöÄ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø:

üí∞ –ò–≥—Ä–∞–π—Ç–µ –Ω–∞ TON –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏!
üèÜ –°–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!
ü§ù –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –æ—Ñ—Ñ–µ—Ä—ã –Ω–∞ –¥—É—ç–ª–∏!
üõçÔ∏è –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–µ–π—Å—ã —Å –ø—Ä–∏–∑–∞–º–∏!

üì¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π!
üí¨ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —á–∞—Ç—É –¥–ª—è –æ–±—â–µ–Ω–∏—è!"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", url="https://onedice.ru/")],
        [InlineKeyboardButton(text="–ö–∞–Ω–∞–ª", url="http://t.me/onedices")],
        [InlineKeyboardButton(text="–ù–∞—à —á–∞—Ç", url="http://t.me/myonedice")]
    ])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(welcome_text, reply_markup=keyboard)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("–ë–æ—Ç OneDice –∑–∞–ø—É—â–µ–Ω!")
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É—à –Ω–∞ GitHub –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    auto_push_to_github()
    
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

